x<-rnorm(100)#
y<-rnorm(100)#
plot(x,y)
install.packages("igraph", dependencies=T)
?strftime
install.packages("RPostgreSQL", "dependencies=TRUE")
install.packages("RPostgreSQL", dependencies=TRUE)
install.packages("~/Downloads/RPostgreSQL_0.1-7.tar.gz", repos=NULL, type="source")
library(ggplot2)
?scale_x_datae
?scale_x_date
my.dates = as.Date(c("2011-07-22","2011-07-23",#
                     "2011-07-24","2011-07-28","2011-07-29"))#
my.vals  = c(5,6,8,7,3)#
my.data <- data.frame(date =my.dates, vals = my.vals)
my.data
plot(my.dates, my.vals)
p <- ggplot(data = my.data, aes(date,vals))+ geom_line(size = 1.5)
print(p)
p <- ggplot(data = my.data, aes(date,vals))+ geom_line(size = 1.5)+scale_x_continuous(breaks = as.numeric(my.data$date)#
                     , labels = format(my.data$date, format = "%m/%d"))
print(p)
ggplot(my.data, aes(as.numeric(date), vals)) + #
  geom_line(size = 1.5) +#
  scale_x_continuous(breaks = as.numeric(my.data$date)#
                     , labels = format(my.data$date, format = "%m/%d"))
-0.2e^-5
pi
e
ln
-0.2e-5
rbind(c(1,2), c(integer(0), integer(0)))
?write.table
library(plyr)
55.56 / 41.95
install.packages('fastmatch', dependencies=T)
install.packages('reshape2', dependencies=T)
library(reshape2)
airquality
?dcast
names(airquality) <- tolower(names(airquality))
melt(airquality, id=c("month", "day"), na.rm=TRUE)
acast(aqm, day ~ month ~ variable
)
aqm <- melt(airquality, id=c("month", "day"), na.rm=TRUE)
acast(aqm, day ~ month ~ variable)
set.seed(1)#
funct <- function(myState, myYear){#
   rnorm(1, 100, 500) +  myState + (100 * myYear) #
}#
state <- 50:60#
year <- 10:40#
myData <- expand.grid( year, state)#
names(myData) <- c("year","state")#
myData$value <- apply(myData, 1, function(x) funct(x[2], x[1]))#
## ok, done with the fake data generation. #
#
require(plyr)
myData
ddply(myData, .(state), summarise, lm=function(x) lm(value ~ year, data=x))
setwd('/Users/drewconway/Dropbox/cmp_recoding/analysis/CrowdFlower/Phase0a')
# File-Name:       phase0a_exploration.R#
# Date:            2012-01-13#
# Author:          Drew Conway#
# Email:           drew.conway@nyu.edu                                      #
# Purpose:         Exploratory data analysis of Phase0a#
# Data Used:       data/f79612.csv#
# Packages Used:   RJSONIO, ggplot2#
# Machine:         Drew Conway's MacBook Pro#
#
# Copyright (c) 2012, under the Simplified BSD License.  #
# For more information on FreeBSD see: http://www.opensource.org/licenses/bsd-license.php#
# All rights reserved.#
#
library(RJSONIO)#
library(foreign)#
library(ggplot2)#
#
# Load in CrowdFlower coding#
cf.file <- 'data/f79612.csv'#
cf.data <- read.csv(cf.file, stringsAsFactors=FALSE)#
#
# Load in expert codings#
phase1.wide <- read.dta('../../Phase1_wide.dta')#
#
# Merge in expert codings to
head(cf.data)
setwd('/Users/drewconway/Dropbox/cmp_recoding/analysis/CrowdFlower/Phase0a')
phase1.wide <- phase1.wide[with(phase1.wide, order(text_unit_id)),]
head(phase1.wide)
setwd('/Users/drewconway/Dropbox/cmp_recoding/analysis/CrowdFlower/Phase0a')
cd.data <- cd.data[with(cd.data, order(text_unit_id)),]
setwd('/Users/drewconway/Dropbox/cmp_recoding/analysis/CrowdFlower/Phase0a')
cf.data <- cf.data[with(cf.data, order(text_unit_id)),]
head(cf.data)
setwd('/Users/drewconway/Dropbox/cmp_recoding/analysis/CrowdFlower/Phase0a')
all.data <- merge(cf.data, phase1.wide, by.all='text_unit_id')
head(all.data)
nrow(all.data)
nrow(cf.data)
2209/3
setwd('/Users/drewconway/Dropbox/cmp_recoding/analysis/CrowdFlower/Phase0a')
# File-Name:       phase0a_exploration.R#
# Date:            2012-01-13#
# Author:          Drew Conway#
# Email:           drew.conway@nyu.edu                                      #
# Purpose:         Exploratory data analysis of Phase0a#
# Data Used:       data/f79612.csv#
# Packages Used:   RJSONIO, ggplot2#
# Machine:         Drew Conway's MacBook Pro#
#
# Copyright (c) 2012, under the Simplified BSD License.  #
# For more information on FreeBSD see: http://www.opensource.org/licenses/bsd-license.php#
# All rights reserved.#
#
library(RJSONIO)#
library(foreign)#
library(ggplot2)#
#
# Load in CrowdFlower coding#
cf.file <- 'data/f79612.csv'#
cf.data <- read.csv(cf.file, stringsAsFactors=FALSE)#
#
# Load in expert codings#
phase1.wide <- read.dta('../../Phase1_wide.dta')#
#
# Merge in expert codings to CF data by text_unit_id#
phase1.wide <- phase1.wide[with(phase1.wide, order(text_unit_id)),]#
cf.data <- cf.data[with(cf.data, order(text_unit_id)),]#
#
all.data <- merge(cf.data, phase1.wide, by.all='text_unit_id')
head(all.data)
t = 1:10
length(which(t > 10))
length(which(c(t, NA) > 10))
setwd('/Users/drewconway/Dropbox/cmp_recoding/analysis/CrowdFlower/Phase0a')
cf.means <- ddply(all.data, .(Party, Year, text_unit_id), summarise, #
    Mean.Econ = mean(economic_policy_scale), Mean.Social = mean(social_policy_area),#
    Num.Econ = length(which(policy_area == 2), Num.Soc = length(which(policy_area == 3)),#
    Num.NA = length(which(policy_area == 1))
)
)
setwd('/Users/drewconway/Dropbox/cmp_recoding/analysis/CrowdFlower/Phase0a')
cf.means <- ddply(all.data, .(Party, Year, text_unit_id), summarise, #
    Mean.Econ = mean(economic_policy_scale), Mean.Social = mean(social_policy_area),#
    Num.Econ = length(which(policy_area == 2)), Num.Soc = length(which(policy_area == 3)),#
    Num.NA = length(which(policy_area == 1)))
head(all.data)
setwd('/Users/drewconway/Dropbox/cmp_recoding/analysis/CrowdFlower/Phase0a')
# File-Name:       phase0a_exploration.R#
# Date:            2012-01-13#
# Author:          Drew Conway#
# Email:           drew.conway@nyu.edu                                      #
# Purpose:         Exploratory data analysis of Phase0a#
# Data Used:       data/f79612.csv#
# Packages Used:   RJSONIO, ggplot2#
# Machine:         Drew Conway's MacBook Pro#
#
# Copyright (c) 2012, under the Simplified BSD License.  #
# For more information on FreeBSD see: http://www.opensource.org/licenses/bsd-license.php#
# All rights reserved.#
#
library(RJSONIO)#
library(foreign)#
library(ggplot2)#
library(plyr)#
#
# Load in CrowdFlower coding#
cf.file <- 'data/f79612.csv'#
cf.data <- read.csv(cf.file, stringsAsFactors=FALSE)#
#
# Load in expert codings#
phase1.wide <- read.dta('../../Phase1_wide.dta')#
#
# Merge in expert codings to CF data by text_unit_id#
phase1.wide <- phase1.wide[with(phase1.wide, order(text_unit_id)),]#
cf.data <- cf.data[with(cf.data, order(text_unit_id)),]#
#
all.data <- merge(cf.data, phase1.wide, by.all='text_unit_id')#
#
cf.means <- ddply(all.data, .(party, year, text_unit_id), summarise, #
    Mean.Econ = mean(economic_policy_scale), Mean.Social = mean(social_policy_area),#
    Num.Econ = length(which(policy_area == 2)), Num.Soc = length(which(policy_area == 3)),#
    Num.NA = length(which(policy_area == 1)))
head(all.data)
setwd('/Users/drewconway/Dropbox/cmp_recoding/analysis/CrowdFlower/Phase0a')
# File-Name:       phase0a_exploration.R#
# Date:            2012-01-13#
# Author:          Drew Conway#
# Email:           drew.conway@nyu.edu                                      #
# Purpose:         Exploratory data analysis of Phase0a#
# Data Used:       data/f79612.csv#
# Packages Used:   RJSONIO, ggplot2#
# Machine:         Drew Conway's MacBook Pro#
#
# Copyright (c) 2012, under the Simplified BSD License.  #
# For more information on FreeBSD see: http://www.opensource.org/licenses/bsd-license.php#
# All rights reserved.#
#
library(RJSONIO)#
library(foreign)#
library(ggplot2)#
library(plyr)#
#
# Load in CrowdFlower coding#
cf.file <- 'data/f79612.csv'#
cf.data <- read.csv(cf.file, stringsAsFactors=FALSE)#
#
# Load in expert codings#
phase1.wide <- read.dta('../../Phase1_wide.dta')#
#
# Merge in expert codings to CF data by text_unit_id#
phase1.wide <- phase1.wide[with(phase1.wide, order(text_unit_id)),]#
cf.data <- cf.data[with(cf.data, order(text_unit_id)),]#
#
all.data <- merge(cf.data, phase1.wide, by.all='text_unit_id')#
#
cf.means <- ddply(all.data, .(party, year, text_unit_id), summarise, #
    Mean.Econ = mean(economic_policy_scale), Mean.Social = mean(social_policy_scale),#
    Num.Econ = length(which(policy_area == 2)), Num.Soc = length(which(policy_area == 3)),#
    Num.NA = length(which(policy_area == 1)))
head(cf.means)
400*3
nrow(cf.means)
summary(cf.means)
summary(cf.data)
table(cf.data$policy_area)
setwd('/Users/drewconway/Dropbox/cmp_recoding/analysis/CrowdFlower/Phase0a')
cf.means <- ddply(all.data, .(party, year, text_unit_id), summarise, #
    Mean.Econ = mean(economic_policy_scale), Mean.Social = mean(social_policy_scale),#
    Num.Econ = length(which(policy_area == '2')), Num.Soc = length(which(policy_area == '3')),#
    Num.NA = length(which(policy_area == "Not Economic or Social")))
summary(cf.means)
head(cf.means)
all.data[which(all.data$text_unit_id == 1000511),]
setwd('/Users/drewconway/Dropbox/cmp_recoding/analysis/CrowdFlower/Phase0a')
cf.means <- ddply(all.data, .(party, year, text_unit_id), summarise, #
    Mean.Econ = sum(which(!is.na(economic_policy_scale))) / length(which(policy_area == '2')), #
    Mean.Social = mean(social_policy_scale),#
    Num.Econ = length(which(policy_area == '2')), #
    Num.Soc = length(which(policy_area == '3')),#
    Num.NA = length(which(policy_area == "Not Economic or Social")))
head(cf.means)
setwd('/Users/drewconway/Dropbox/cmp_recoding/analysis/CrowdFlower/Phase0a')
cf.means <- ddply(all.data, .(party, year, text_unit_id), summarise, #
    Mean.Econ = sum(which(!is.na(economic_policy_scale))) / length(which(policy_area == '2')), #
    Mean.Social = sum(which(!is.na(social_policy_scale))) / length(which(policy_area == '3')),#
    Num.Econ = length(which(policy_area == '2')), #
    Num.Soc = length(which(policy_area == '3')),#
    Num.NA = length(which(policy_area == "Not Economic or Social")))
head(cf.means)
c(2,1) * c(1,2)
NA * 4
setwd('/Users/drewconway/Dropbox/cmp_recoding/analysis/CrowdFlower/Phase0a')
cf.means <- ddply(all.data, .(party, year, text_unit_id), summarise, #
    Mean.Econ = sum(which(!is.na(economic_policy_scale))) / length(which(policy_area == '2')), #
    Mean.Social = sum(which(!is.na(social_policy_scale))) / length(which(policy_area == '3')),#
    Num.Econ = length(which(policy_area == '2')), #
    Num.Soc = length(which(policy_area == '3')),#
    Num.NA = length(which(policy_area == "Not Economic or Social")))
head(cf.means)
setwd('/Users/drewconway/Dropbox/cmp_recoding/analysis/CrowdFlower/Phase0a')
cf.means <- ddply(all.data, .(party, year, text_unit_id), summarise, #
    CF.Mean.Econ = sum(which(!is.na(economic_policy_scale))) / length(which(policy_area == '2')), #
    CF.Mean.Social = sum(which(!is.na(social_policy_scale))) / length(which(policy_area == '3')),#
    CF.Num.Econ = length(which(policy_area == '2')), #
    CF.Num.Soc = length(which(policy_area == '3')),#
    CF.Num.NA = length(which(policy_area == "Not Economic or Social")))
head(cf.means)
setwd('/Users/drewconway/Dropbox/cmp_recoding/analysis/CrowdFlower/Phase0a')
which(is.na(cf.mean))
setwd('/Users/drewconway/Dropbox/cmp_recoding/analysis/CrowdFlower/Phase0a')
which(is.na(cf.means))
setwd('/Users/drewconway/Dropbox/cmp_recoding/analysis/CrowdFlower/Phase0a')
cf.means[with(cf.means, which(is.na(cf.means))),] <- NA
head(cf.means)
setwd('/Users/drewconway/Dropbox/cmp_recoding/analysis/CrowdFlower/Phase0a')
cf.means <- ddply(all.data, .(party, year, text_unit_id), summarise, #
    CF.Mean.Econ = sum(which(!is.na(economic_policy_scale))) / length(which(policy_area == '2')), #
    CF.Mean.Social = sum(which(!is.na(social_policy_scale))) / length(which(policy_area == '3')),#
    CF.Num.Econ = length(which(policy_area == '2')), #
    CF.Num.Soc = length(which(policy_area == '3')),#
    CF.Num.NA = length(which(policy_area == "Not Economic or Social")))
setwd('/Users/drewconway/Dropbox/cmp_recoding/analysis/CrowdFlower/Phase0a')
cf.means[with(cf.means, which(is.nan(cf.means))),] <- NA
?is.nan
is.nan(cf.means)
setwd('/Users/drewconway/Dropbox/cmp_recoding/analysis/CrowdFlower/Phase0a')
cf.means$CF.Mean.Econ[which(is.nan(cf.means$CF.Mean.Econ)] <- NA
setwd('/Users/drewconway/Dropbox/cmp_recoding/analysis/CrowdFlower/Phase0a')
cf.means$CF.Mean.Econ[which(is.nan(cf.means$CF.Mean.Econ))] <- NA
head(cf.means)
setwd('/Users/drewconway/Dropbox/cmp_recoding/analysis/CrowdFlower/Phase0a')
# File-Name:       phase0a_exploration.R#
# Date:            2012-01-13#
# Author:          Drew Conway#
# Email:           drew.conway@nyu.edu                                      #
# Purpose:         Exploratory data analysis of Phase0a#
# Data Used:       data/f79612.csv#
# Packages Used:   RJSONIO, ggplot2#
# Machine:         Drew Conway's MacBook Pro#
#
# Copyright (c) 2012, under the Simplified BSD License.  #
# For more information on FreeBSD see: http://www.opensource.org/licenses/bsd-license.php#
# All rights reserved.#
#
library(RJSONIO)#
library(foreign)#
library(ggplot2)#
library(plyr)#
#
# Load in CrowdFlower coding#
cf.file <- 'data/f79612.csv'#
cf.data <- read.csv(cf.file, stringsAsFactors=FALSE)#
#
# Load in expert codings#
phase1.wide <- read.dta('../../Phase1_wide.dta')#
#
# Merge in expert codings to CF data by text_unit_id#
phase1.wide <- phase1.wide[with(phase1.wide, order(text_unit_id)),]#
cf.data <- cf.data[with(cf.data, order(text_unit_id)),]#
#
all.data <- merge(cf.data, phase1.wide, by.all='text_unit_id')#
#
cf.means <- ddply(all.data, .(party, year, text_unit_id), summarise, #
    CF.Mean.Econ = sum(which(!is.na(economic_policy_scale))) / length(which(policy_area == '2')), #
    CF.Mean.Social = sum(which(!is.na(social_policy_scale))) / length(which(policy_area == '3')),#
    CF.Num.Econ = length(which(policy_area == '2')), #
    CF.Num.Soc = length(which(policy_area == '3')),#
    CF.Num.NA = length(which(policy_area == "Not Economic or Social")))#
    #
cf.means$CF.Mean.Econ[which(is.nan(cf.means$CF.Mean.Econ))] <- NA#
cf.means$CF.Mean.Soc[which(is.nan(cf.means$CF.Mean.Soc))] <- NA
head(cf.means)
setwd('/Users/drewconway/Dropbox/cmp_recoding/analysis/CrowdFlower/Phase0a')
cf.means <- ddply(all.data, .(party, year, text_unit_id), summarise, #
    CF.Mean.Econ = sum(which(!is.na(economic_policy_scale))) / length(which(policy_area == '2')), #
    CF.Mean.Soc = sum(which(!is.na(social_policy_scale))) / length(which(policy_area == '3')),#
    CF.Num.Econ = length(which(policy_area == '2')), #
    CF.Num.Soc = length(which(policy_area == '3')),#
    CF.Num.NA = length(which(policy_area == "Not Economic or Social")))#
    #
cf.means$CF.Mean.Econ[which(is.nan(cf.means$CF.Mean.Econ))] <- NA#
cf.means$CF.Mean.Soc[which(is.nan(cf.means$CF.Mean.Soc))] <- NA
head(cf.means)
head(all.data)
setwd('/Users/drewconway/Dropbox/cmp_recoding/analysis/CrowdFlower/Phase0a')
cf.means <- ddply(all.data, .(party, year, text_unit_id), summarise, #
    CF.Mean.Econ = sum(which(!is.na(economic_policy_scale))) / length(which(policy_area == '2')), #
    CF.Mean.Soc = sum(which(!is.na(social_policy_scale))) / length(which(policy_area == '3')),#
    CF.Num.Econ = length(which(policy_area == '2')), #
    CF.Num.Soc = length(which(policy_area == '3')),#
    CF.Num.NA = length(which(policy_area == "Not Economic or Social")),#
    CF.Summary = mean(ifelse(is.na(which(!is.na(economic_policy_scale)) * which(policy_area == '2')), 0, #
                        is.na(which(!is.na(economic_policy_scale)) * which(policy_area == '2'))),#
                     ifelse(is.na(which(!is.na(social_policy_scale)) * which(policy_area == '3')), 0, #
                        is.na(which(!is.na(social_policy_scale)) * which(policy_area == '3'))), #
                     rep(0, length(which(policy_area == "Not Economic or Social"))))#
    )
c()*c()
setwd('/Users/drewconway/Dropbox/cmp_recoding/analysis/CrowdFlower/Phase0a')
cf.means <- ddply(all.data, .(party, year, text_unit_id), summarise, #
    CF.Mean.Econ = sum(which(!is.na(economic_policy_scale))) / length(which(policy_area == '2')), #
    CF.Mean.Soc = sum(which(!is.na(social_policy_scale))) / length(which(policy_area == '3')),#
    CF.Num.Econ = length(which(policy_area == '2')), #
    CF.Num.Soc = length(which(policy_area == '3')),#
    CF.Num.NA = length(which(policy_area == "Not Economic or Social")),#
    CF.Summary = mean(ifelse(length(which(!is.na(economic_policy_scale)) * which(policy_area == '2')) < 1, 0, #
                        is.na(which(!is.na(economic_policy_scale)) * which(policy_area == '2'))),#
                     ifelse(length(which(!is.na(social_policy_scale)) * which(policy_area == '3')) < 1, 0, #
                        is.na(which(!is.na(social_policy_scale)) * which(policy_area == '3'))), #
                     rep(0, length(which(policy_area == "Not Economic or Social"))))#
    )
setwd('/Users/drewconway/Dropbox/cmp_recoding/analysis/CrowdFlower/Phase0a')
#
cf.means <- ddply(all.data, .(party, year, text_unit_id), summarise, #
    CF.Mean.Econ = sum(which(!is.na(economic_policy_scale))) / length(which(policy_area == '2')), #
    CF.Mean.Soc = sum(which(!is.na(social_policy_scale))) / length(which(policy_area == '3')),#
    CF.Num.Econ = length(which(policy_area == '2')), #
    CF.Num.Soc = length(which(policy_area == '3')),#
    CF.Num.NA = length(which(policy_area == "Not Economic or Social")),#
    CF.Summary = ifelse(length(which(!is.na(economic_policy_scale)) * which(policy_area == '2')) < 1, 0, #
                        is.na(which(!is.na(economic_policy_scale)) * which(policy_area == '2')))#
    )#
    #
cf.means$CF.Mean.Econ[which(is.nan(cf.means$CF.Mean.Econ))] <- NA#
cf.means$CF.Mean.Soc[which(is.nan(cf.means$CF.Mean.Soc))] <- NA
head(cf.means)
warnings
warnings()
head(all.data)
mean(c(2,-2))
setwd('/Users/drewconway/Dropbox/cmp_recoding/analysis/CrowdFlower/Phase0a')
cf.means <- ddply(all.data, .(party, year, text_unit_id), summarise, #
    CF.Mean.Econ = sum(which(!is.na(economic_policy_scale))) / length(which(policy_area == '2')), #
    CF.Mean.Soc = sum(which(!is.na(social_policy_scale))) / length(which(policy_area == '3')),#
    CF.Num.Econ = length(which(policy_area == '2')), #
    CF.Num.Soc = length(which(policy_area == '3')),#
    CF.Num.NA = length(which(policy_area == "Not Economic or Social")))
head(cf.means)
setwd('/Users/drewconway/Dropbox/cmp_recoding/analysis/CrowdFlower/Phase0a')
cf.means <- ddply(all.data, .(party, year, text_unit_id), summarise, #
    CF.Mean.Econ = sum(which(!is.na(economic_policy_scale))) / length(which(policy_area == '2')), #
    CF.Mean.Soc = sum(which(!is.na(social_policy_scale))) / length(which(policy_area == '3')),#
    CF.Num.Econ = length(which(policy_area == '2')), #
    CF.Num.Soc = length(which(policy_area == '3')),#
    CF.Num.NA = length(which(policy_area == "Not Economic or Social")))#
    #
cf.means$CF.Mean.Econ[which(is.nan(cf.means$CF.Mean.Econ))] <- NA#
cf.means$CF.Mean.Soc[which(is.nan(cf.means$CF.Mean.Soc))] <- NA
head(cf.means)
summary(cf.means)
var(c(-1,1))
table(all.data$scale_ken)
sum(c())
setwd('/Users/drewconway/Dropbox/cmp_recoding/analysis/CrowdFlower/Phase0a')
cf.means <- ddply(all.data, .(party, year, text_unit_id), summarise, #
    CF.Mean.Econ = sum(which(!is.na(economic_policy_scale))) / length(which(policy_area == '2')), #
    CF.Mean.Soc = sum(which(!is.na(social_policy_scale))) / length(which(policy_area == '3')),#
    CF.Num.Econ = length(which(policy_area == '2')), #
    CF.Num.Soc = length(which(policy_area == '3')),#
    CF.Num.NA = length(which(policy_area == "Not Economic or Social")),#
    EX.Mean.Econ = mean((sum(which(!is.na(code_ken))) / length(which(scale_ken == e))),#
                        (sum(which(!is.na(code_mik))) / length(which(scale_mik == e))),#
                        (sum(which(!is.na(code_slava))) / length(which(scale_slava == e)))#
                        (sum(which(!is.na(code_pablo))) / length(which(scale_pablo == e)))#
                        (sum(which(!is.na(code_iulia))) / length(which(scale_iulia == e)))#
                        (sum(which(!is.na(code_alex))) / length(which(scale_alex == e))))#
                        #
    )
setwd('/Users/drewconway/Dropbox/cmp_recoding/analysis/CrowdFlower/Phase0a')
# Expert scale codings, shorthand#
# ken, mik, slava, pablo, iulia, alex, #
e <- 'Economic'#
s <- 'Social'#
n <- 'None'#
#
cf.means <- ddply(all.data, .(party, year, text_unit_id), summarise, #
    CF.Mean.Econ = sum(which(!is.na(economic_policy_scale))) / length(which(policy_area == '2')), #
    CF.Mean.Soc = sum(which(!is.na(social_policy_scale))) / length(which(policy_area == '3')),#
    CF.Num.Econ = length(which(policy_area == '2')), #
    CF.Num.Soc = length(which(policy_area == '3')),#
    CF.Num.NA = length(which(policy_area == "Not Economic or Social")),#
    EX.Mean.Econ = mean((sum(which(!is.na(code_ken))) / length(which(scale_ken == e))),#
                        (sum(which(!is.na(code_mik))) / length(which(scale_mik == e))),#
                        (sum(which(!is.na(code_slava))) / length(which(scale_slava == e)))#
                        (sum(which(!is.na(code_pablo))) / length(which(scale_pablo == e)))#
                        (sum(which(!is.na(code_iulia))) / length(which(scale_iulia == e)))#
                        (sum(which(!is.na(code_alex))) / length(which(scale_alex == e))))#
                        #
    )
e
setwd('/Users/drewconway/Dropbox/cmp_recoding/analysis/CrowdFlower/Phase0a')
#
# Exp#
# ken#
e <- #
s <- #
n <- #
#
cf.me#
    C#
    C#
    C#
    C#
    C#
    E#
     #
     #
     #
     #
     #
     #
    )
setwd('/Users/drewconway/Dropbox/cmp_recoding/analysis/CrowdFlower/Phase0a')
# Fil#
# Dat#
# Aut#
# Ema#
# Pur#
# Dat#
# Pac#
# Mac#
#
# Cop#
# For#
# All#
#
libra#
libra#
libra#
libra#
#
# Loa#
cf.fi#
cf.da#
#
# Loa#
phase#
#
# Mer#
phase#
cf.da#
#
all.d#
#
# Exp#
# ken#
e <- #
s <- #
n <- #
#
cf.me#
    C#
    C#
    C#
    C#
    C#
    E#
     #
     #
     #
     #
     #
     #
    )
setwd('/Users/drewconway/Dropbox/cmp_recoding/analysis/CrowdFlower/Phase0a')
# File-Name:       phase0a_exploration.R#
# Date:            2012-01-13#
# Author:          Drew Conway#
# Email:           drew.conway@nyu.edu                                      #
# Purpose:         Exploratory data analysis of Phase0a#
# Data Used:       data/f79612.csv#
# Packages Used:   RJSONIO, ggplot2#
# Machine:         Drew Conway's MacBook Pro#
#
# Copyright (c) 2012, under the Simplified BSD License.  #
# For more information on FreeBSD see: http://www.opensource.org/licenses/bsd-license.php#
# All rights reserved.#
#
library(RJSONIO)#
library(foreign)#
library(ggplot2)#
library(plyr)#
#
# Load in CrowdFlower coding#
cf.file <- 'data/f79612.csv'#
cf.data <- read.csv(cf.file, stringsAsFactors=FALSE)#
#
# Load in expert codings#
phase1.wide <- read.dta('../../Phase1_wide.dta')#
#
# Merge in expert codings to CF data by text_unit_id#
phase1.wide <- phase1.wide[with(phase1.wide, order(text_unit_id)),]#
cf.data <- cf.data[with(cf.data, order(text_unit_id)),]#
#
all.data <- merge(cf.data, phase1.wide, by.all='text_unit_id')#
#
# Expert scale codings, shorthand#
# ken, mik, slava, pablo, iulia, alex, #
e <- 'Economic'#
s <- 'Social'#
n <- 'None'#
#
cf.means <- ddply(all.data, .(party, year, text_unit_id), summarise, #
    CF.Mean.Econ = sum(which(!is.na(economic_policy_scale))) / length(which(policy_area == '2')), #
    CF.Mean.Soc = sum(which(!is.na(social_policy_scale))) / length(which(policy_area == '3')),#
    CF.Num.Econ = length(which(policy_area == '2')), #
    CF.Num.Soc = length(which(policy_area == '3')),#
    CF.Num.NA = length(which(policy_area == "Not Economic or Social")),#
    EX.Mean.Econ = mean(sum(which(!is.na(code_ken))) / length(which(scale_ken == e)),#
                        sum(which(!is.na(code_mik))) / length(which(scale_mik == e)),#
                        sum(which(!is.na(code_slava))) / length(which(scale_slava == e)),#
                        sum(which(!is.na(code_pablo))) / length(which(scale_pablo == e)),#
                        sum(which(!is.na(code_iulia))) / length(which(scale_iulia == e)),#
                        sum(which(!is.na(code_alex))) / length(which(scale_alex == e)))#
                        #
    )
setwd('/Users/drewconway/Dropbox/cmp_recoding/analysis/CrowdFlower/Phase0a')
# File-Name:       phase0a_exploration.R#
# Date:            2012-01-13#
# Author:          Drew Conway#
# Email:           drew.conway@nyu.edu                                      #
# Purpose:         Exploratory data analysis of Phase0a#
# Data Used:       data/f79612.csv#
# Packages Used:   RJSONIO, ggplot2#
# Machine:         Drew Conway's MacBook Pro#
#
# Copyright (c) 2012, under the Simplified BSD License.  #
# For more information on FreeBSD see: http://www.opensource.org/licenses/bsd-license.php#
# All rights reserved.#
#
library(RJSONIO)#
library(foreign)#
library(ggplot2)#
library(plyr)#
#
# Load in CrowdFlower coding#
cf.file <- 'data/f79612.csv'#
cf.data <- read.csv(cf.file, stringsAsFactors=FALSE)#
#
# Load in expert codings#
phase1.wide <- read.dta('../../Phase1_wide.dta')#
#
# Merge in expert codings to CF data by text_unit_id#
phase1.wide <- phase1.wide[with(phase1.wide, order(text_unit_id)),]#
cf.data <- cf.data[with(cf.data, order(text_unit_id)),]#
#
all.data <- merge(cf.data, phase1.wide, by.all='text_unit_id')#
#
# Expert scale codings, shorthand#
# ken, mik, slava, pablo, iulia, alex, #
e <- 'Economic'#
s <- 'Social'#
n <- 'None'#
#
cf.means <- ddply(all.data, .(party, year, text_unit_id), summarise, #
    CF.Mean.Econ = sum(which(!is.na(economic_policy_scale))) / length(which(policy_area == '2')), #
    CF.Mean.Soc = sum(which(!is.na(social_policy_scale))) / length(which(policy_area == '3')),#
    CF.Num.Econ = length(which(policy_area == '2')), #
    CF.Num.Soc = length(which(policy_area == '3')),#
    CF.Num.NA = length(which(policy_area == "Not Economic or Social")),#
    EX.Mean.Econ = sum(which(!is.na(code_ken)))#
    )#
    #
cf.means$CF.Mean.Econ[which(is.nan(cf.means$CF.Mean.Econ))] <- NA#
cf.means$CF.Mean.Soc[which(is.nan(cf.means$CF.Mean.Soc))] <- NA
head(cf.means)
setwd('/Users/drewconway/Dropbox/cmp_recoding/analysis/CrowdFlower/Phase0a')
#
cf.means <- ddply(all.data, .(party, year, text_unit_id), summarise, #
    CF.Mean.Econ = sum(which(!is.na(economic_policy_scale))) / length(which(policy_area == '2')), #
    CF.Mean.Soc = sum(which(!is.na(social_policy_scale))) / length(which(policy_area == '3')),#
    CF.Num.Econ = length(which(policy_area == '2')), #
    CF.Num.Soc = length(which(policy_area == '3')),#
    CF.Num.NA = length(which(policy_area == "Not Economic or Social")),#
    EX.Mean.Econ = sum(which(!is.na(code_ken))) / 3#
    )
head(cf.means)
setwd('/Users/drewconway/Dropbox/cmp_recoding/analysis/CrowdFlower/Phase0a')
# File-Name:       phase0a_exploration.R#
# Date:            2012-01-13#
# Author:          Drew Conway#
# Email:           drew.conway@nyu.edu                                      #
# Purpose:         Exploratory data analysis of Phase0a#
# Data Used:       data/f79612.csv#
# Packages Used:   RJSONIO, ggplot2#
# Machine:         Drew Conway's MacBook Pro#
#
# Copyright (c) 2012, under the Simplified BSD License.  #
# For more information on FreeBSD see: http://www.opensource.org/licenses/bsd-license.php#
# All rights reserved.#
#
library(RJSONIO)#
library(foreign)#
library(ggplot2)#
library(plyr)#
#
# Load in CrowdFlower coding#
cf.file <- 'data/f79612.csv'#
cf.data <- read.csv(cf.file, stringsAsFactors=FALSE)#
#
# Load in expert codings#
phase1.wide <- read.dta('../../Phase1_wide.dta')#
#
# Merge in expert codings to CF data by text_unit_id#
phase1.wide <- phase1.wide[with(phase1.wide, order(text_unit_id)),]#
cf.data <- cf.data[with(cf.data, order(text_unit_id)),]#
#
all.data <- merge(cf.data, phase1.wide, by.all='text_unit_id')#
#
# Expert scale codings, shorthand#
# ken, mik, slava, pablo, iulia, alex, #
e <- 'Economic'#
s <- 'Social'#
n <- 'None'#
#
cf.means <- ddply(all.data, .(party, year, text_unit_id), summarise, #
    CF.Mean.Econ = sum(which(!is.na(economic_policy_scale))) / length(which(policy_area == '2')), #
    CF.Mean.Soc = sum(which(!is.na(social_policy_scale))) / length(which(policy_area == '3')),#
    CF.Num.Econ = length(which(policy_area == '2')), #
    CF.Num.Soc = length(which(policy_area == '3')),#
    CF.Num.NA = length(which(policy_area == "Not Economic or Social")),#
    )#
    #
cf.means$CF.Mean.Econ[which(is.nan(cf.means$CF.Mean.Econ))] <- NA#
cf.means$CF.Mean.Soc[which(is.nan(cf.means$CF.Mean.Soc))] <- NA
setwd('/Users/drewconway/Dropbox/cmp_recoding/analysis/CrowdFlower/Phase0a')
# File-Name:       phase0a_exploration.R#
# Date:            2012-01-13#
# Author:          Drew Conway#
# Email:           drew.conway@nyu.edu                                      #
# Purpose:         Exploratory data analysis of Phase0a#
# Data Used:       data/f79612.csv#
# Packages Used:   RJSONIO, ggplot2#
# Machine:         Drew Conway's MacBook Pro#
#
# Copyright (c) 2012, under the Simplified BSD License.  #
# For more information on FreeBSD see: http://www.opensource.org/licenses/bsd-license.php#
# All rights reserved.#
#
library(RJSONIO)#
library(foreign)#
library(ggplot2)#
library(plyr)#
#
# Load in CrowdFlower coding#
cf.file <- 'data/f79612.csv'#
cf.data <- read.csv(cf.file, stringsAsFactors=FALSE)#
#
# Load in expert codings#
phase1.wide <- read.dta('../../Phase1_wide.dta')#
#
# Merge in expert codings to CF data by text_unit_id#
phase1.wide <- phase1.wide[with(phase1.wide, order(text_unit_id)),]#
cf.data <- cf.data[with(cf.data, order(text_unit_id)),]#
#
all.data <- merge(cf.data, phase1.wide, by.all='text_unit_id')#
#
# Expert scale codings, shorthand#
# ken, mik, slava, pablo, iulia, alex, #
e <- 'Economic'#
s <- 'Social'#
n <- 'None'#
#
cf.means <- ddply(all.data, .(party, year, text_unit_id), summarise, #
    CF.Mean.Econ = sum(which(!is.na(economic_policy_scale))) / length(which(policy_area == '2')), #
    CF.Mean.Soc = sum(which(!is.na(social_policy_scale))) / length(which(policy_area == '3')),#
    CF.Num.Econ = length(which(policy_area == '2')), #
    CF.Num.Soc = length(which(policy_area == '3')),#
    CF.Num.NA = length(which(policy_area == "Not Economic or Social")))#
    #
cf.means$CF.Mean.Econ[which(is.nan(cf.means$CF.Mean.Econ))] <- NA#
cf.means$CF.Mean.Soc[which(is.nan(cf.means$CF.Mean.Soc))] <- NA
head(cf.mens)
head(cf.means)
head(cf.data)
setwd('/Users/drewconway/Dropbox/cmp_recoding/analysis/CrowdFlower/Phase0a')
# File-Name:       phase0a_exploration.R#
# Date:            2012-01-13#
# Author:          Drew Conway#
# Email:           drew.conway@nyu.edu                                      #
# Purpose:         Exploratory data analysis of Phase0a#
# Data Used:       data/f79612.csv#
# Packages Used:   RJSONIO, ggplot2#
# Machine:         Drew Conway's MacBook Pro#
#
# Copyright (c) 2012, under the Simplified BSD License.  #
# For more information on FreeBSD see: http://www.opensource.org/licenses/bsd-license.php#
# All rights reserved.#
#
library(RJSONIO)#
library(foreign)#
library(ggplot2)#
library(plyr)#
#
# Load in CrowdFlower coding#
cf.file <- 'data/f79612.csv'#
cf.data <- read.csv(cf.file, stringsAsFactors=FALSE)#
#
# Load in expert codings#
phase1.wide <- read.dta('../../Phase1_wide.dta')#
#
# Merge in expert codings to CF data by text_unit_id#
phase1.wide <- phase1.wide[with(phase1.wide, order(text_unit_id)),]#
cf.data <- cf.data[with(cf.data, order(text_unit_id)),]#
#
all.data <- merge(cf.data, phase1.wide, by.all='text_unit_id')#
#
# Expert scale codings, shorthand#
# ken, mik, slava, pablo, iulia, alex, #
e <- 'Economic'#
s <- 'Social'#
n <- 'None'#
#
cf.means <- ddply(cf.data, .(text_unit_id), summarise, #
    CF.Mean.Econ = sum(which(!is.na(economic_policy_scale))) / length(which(policy_area == '2')), #
    CF.Mean.Soc = sum(which(!is.na(social_policy_scale))) / length(which(policy_area == '3')),#
    CF.Num.Econ = length(which(policy_area == '2')), #
    CF.Num.Soc = length(which(policy_area == '3')),#
    CF.Num.NA = length(which(policy_area == "Not Economic or Social")))#
    #
cf.means$CF.Mean.Econ[which(is.nan(cf.means$CF.Mean.Econ))] <- NA#
cf.means$CF.Mean.Soc[which(is.nan(cf.means$CF.Mean.Soc))] <- NA
head(cf.means)
setwd('/Users/drewconway/Dropbox/cmp_recoding/analysis/CrowdFlower/Phase0a')
# File-Name:       phase0a_exploration.R#
# Date:            2012-01-13#
# Author:          Drew Conway#
# Email:           drew.conway@nyu.edu                                      #
# Purpose:         Exploratory data analysis of Phase0a#
# Data Used:       data/f79612.csv#
# Packages Used:   RJSONIO, ggplot2#
# Machine:         Drew Conway's MacBook Pro#
#
# Copyright (c) 2012, under the Simplified BSD License.  #
# For more information on FreeBSD see: http://www.opensource.org/licenses/bsd-license.php#
# All rights reserved.#
#
library(RJSONIO)#
library(foreign)#
library(ggplot2)#
library(plyr)#
#
# Load in CrowdFlower coding#
cf.file <- 'data/f79612.csv'#
cf.data <- read.csv(cf.file, stringsAsFactors=FALSE)#
#
# Load in expert codings#
phase1.wide <- read.dta('../../Phase1_wide.dta')#
#
# Sort data frames to merge in expert codings to CF data by text_unit_id#
phase1.wide <- phase1.wide[with(phase1.wide, order(text_unit_id)),]#
cf.data <- cf.data[with(cf.data, order(text_unit_id)),]#
#
# Expert scale codings, shorthand#
# ken, mik, slava, pablo, iulia, alex, #
e <- 'Economic'#
s <- 'Social'#
n <- 'None'#
#
cf.means <- ddply(cf.data, .(text_unit_id), summarise, #
    CF.Mean.Econ = sum(which(!is.na(economic_policy_scale))) / length(which(policy_area == '2')), #
    CF.Mean.Soc = sum(which(!is.na(social_policy_scale))) / length(which(policy_area == '3')),#
    CF.Num.Econ = length(which(policy_area == '2')), #
    CF.Num.Soc = length(which(policy_area == '3')),#
    CF.Num.NA = length(which(policy_area == "Not Economic or Social")))#
    #
cf.means$CF.Mean.Econ[which(is.nan(cf.means$CF.Mean.Econ))] <- NA#
cf.means$CF.Mean.Soc[which(is.nan(cf.means$CF.Mean.Soc))] <- NA
clear()
clear
head(phase1.wide)
setwd('/Users/drewconway/Documents/OReilly Book/code/ML4H-Code/11-SNA/code')
library(igraph)#
#
# Load functions for building networks from 'google_sg.R'#
# source('01_google_sg.R')#
# #
# # First build the two-round snowball for a given user, supplied at the command-line#
# cat("Twitter user as seed: ")#
# user.in <- file("stdin")#
# user <- readLines(user.in, n = 1)#
# close(user.in)#
#
# NOTE TO WINDOWS USERS: You may not be able to run this script#
# from the DOS shell.  In this case, you should just set this#
# variable to whatever Twitter user you would like to build#
# the network for and run this script as you have done before.#
# #
user <- 'johnmyleswhite' #
#
# dir.create(paste("data/", user, sep = ""), showWarnings = FALSE)#
#
user.net <- read.graph(paste("data/", user, "/", user, "_net.graphml", sep = ""), format = "graphml")#
# user.net <- twitter.snowball(user, k = 2)#
#
# Fix labels for working with Gephi#
user.net  <- set.vertex.attribute(user.net, "Label", value = get.vertex.attribute(user.net, "name"))#
#
# Next, extract the 2-core, and remove pendants generated as a result#
user.cores <- graph.coreness(user.net, mode = "in")#
user.clean <- subgraph(user.net, which(user.cores > 1) - 1)#
#
# Finally, extract ego.net#
user.ego <- subgraph(user.net, c(0, neighbors(user.net, user, mode = "out")))#
#
# Add hierarchical clustering data to network#
user.sp <- shortest.paths(user.ego)#
user.hc <- hclust(dist(user.sp))#
#
png(paste('../images/', user, '_dendrogram.png', sep=''), width=1680, height=1050)#
plot(user.hc)#
dev.off()#
#
# Add first 10 non-trival HC partitions#
for(i in 2:10) {    #
    user.cluster <- as.character(cutree(user.hc, k = i))#
    user.cluster[1] <- "0"#
    user.ego <- set.vertex.attribute(user.ego, name = paste("HC", i, sep = ""), value = user.cluster)#
}#
#
# Add k-means clustering data to network#
for(i in 2:10) {#
    user.km <- kmeans(dist(user.sp), centers = i)#
    user.cluster <- as.character(user.km$cluster)#
    user.cluster[1] <- "0"#
    user.ego <- set.vertex.attribute(user.ego, name = paste("KM", i, sep = ""), value = user.cluster)#
}#
#
# Write files as GraphML format#
write.graph(user.net, paste("data/", user, "/", user, "_net.graphml", sep = ""), format = "graphml")#
write.graph(user.clean, paste("data/", user, "/", user, "_clean.graphml", sep = ""), format = "graphml")#
write.graph(user.ego, paste("data/", user, "/", user, "_ego.graphml", sep = ""), format = "graphml")
